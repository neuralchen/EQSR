name: task_name
model_type: HATModel
scale: 2
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: Set5x2
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Set5/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Set5/LR_bicubic/X2
    io_backend:
      type: disk

  test_2:  # the 2nd test dataset
    name: Set14x2
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Set14/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Set14/LR_bicubic/X2
    io_backend:
      type: disk

  test_3:
    name: Urban100x2
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Urban100/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Urban100/LR_bicubic/X2
    io_backend:
      type: disk

  test_4:
     name: B100x2
     type: DSF_val_Dataset
     dataroot_gt: /data3/GeoSR_data/benchmark/B100/HR
     dataroot_lq: /data3/GeoSR_data/benchmark/B100/LR_bicubic/X2
     io_backend:
       type: disk

  test_401:
     name: Manga109x2
     type: DSF_val_Dataset
     dataroot_gt: /data3/GeoSR_data/benchmark/Manga109/HR
     dataroot_lq: /data3/GeoSR_data/benchmark/Manga109/LR_bicubic/X2
     io_backend:
       type: disk

  test_5:  # the 1st test dataset
    name: Set5x3
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Set5/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Set5/LR_bicubic/X3
    io_backend:
      type: disk

  test_6:  # the 2nd test dataset
    name: Set14x3
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Set14/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Set14/LR_bicubic/X3
    io_backend:
      type: disk

  test_7:
    name: Urban100x3
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Urban100/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Urban100/LR_bicubic/X3
    io_backend:
      type: disk

  test_8:
     name: B100x3
     type: DSF_val_Dataset
     dataroot_gt: /data3/GeoSR_data/benchmark/B100/HR
     dataroot_lq: /data3/GeoSR_data/benchmark/B100/LR_bicubic/X3
     io_backend:
       type: disk

  test_801:
     name: Manga109x3
     type: DSF_val_Dataset
     dataroot_gt: /data3/GeoSR_data/benchmark/Manga109/HR
     dataroot_lq: /data3/GeoSR_data/benchmark/Manga109/LR_bicubic/X3
     io_backend:
       type: disk

  test_9:  # the 1st test dataset
    name: Set5x4
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Set5/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Set5/LR_bicubic/X4
    io_backend:
      type: disk

  test_900:  # the 2nd test dataset
    name: Set14x4
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Set14/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Set14/LR_bicubic/X4
    io_backend:
      type: disk

  test_901:
    name: Urban100x4
    type: DSF_val_Dataset
    dataroot_gt: /data3/GeoSR_data/benchmark/Urban100/HR
    dataroot_lq: /data3/GeoSR_data/benchmark/Urban100/LR_bicubic/X4
    io_backend:
      type: disk

  test_902:
     name: B100x4
     type: DSF_val_Dataset
     dataroot_gt: /data3/GeoSR_data/benchmark/B100/HR
     dataroot_lq: /data3/GeoSR_data/benchmark/B100/LR_bicubic/X4
     io_backend:
       type: disk

  test_903:
     name: Manga109x4
     type: DSF_val_Dataset
     dataroot_gt: /data3/GeoSR_data/benchmark/Manga109/HR
     dataroot_lq: /data3/GeoSR_data/benchmark/Manga109/LR_bicubic/X4
     io_backend:
       type: disk

# network structures
network_g:
  type: EQSR
  upscale: 3
  in_chans: 3
  img_size: 64
  window_size: 16
  compress_ratio: 3
  squeeze_factor: 30
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [5, 5, 5, 5, 5, 5]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'


# path
path:
  pretrain_network_g: ./experiments/train_ModMBFormer_Sim_DSF_ImageNet_DF2K/models/net_g_latest.pth
  strict_load_g: true
  param_key_g: 'params_ema'

# validation settings
val:
  save_img: false
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
